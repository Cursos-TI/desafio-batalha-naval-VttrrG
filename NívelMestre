#include <stdio.h>
#define TAM 5 // Tamanho da matriz de habilidades (5x5)

// Função para exibir a matriz
void exibirMatriz(int matriz[TAM][TAM]) {
    for (int i = 0; i < TAM; i++) {
        for (int j = 0; j < TAM; j++) {
            printf("%d ", matriz[i][j]);
        }
        printf("\n");
    }
}

// Habilidade em forma de CONE (base embaixo, topo no centro)
void habilidadeCone() {
    int matriz[TAM][TAM] = {0};
    int meio = TAM / 2;

    for (int i = 0; i < TAM; i++) {
        for (int j = meio - i; j <= meio + i; j++) {
            if (j >= 0 && j < TAM) {
                matriz[i][j] = 1;
            }
        }
    }

    printf("\nHabilidade: CONE\n");
    exibirMatriz(matriz);
}

// Habilidade em forma de CRUZ
void habilidadeCruz() {
    int matriz[TAM][TAM] = {0};
    int meio = TAM / 2;

    for (int i = 0; i < TAM; i++) {
        matriz[meio][i] = 1; // linha central
        matriz[i][meio] = 1; // coluna central
    }

    printf("\nHabilidade: CRUZ\n");
    exibirMatriz(matriz);
}

// Habilidade em forma de OCTAEDRO (diamante)
void habilidadeOctaedro() {
    int matriz[TAM][TAM] = {0};
    int meio = TAM / 2;

    for (int i = 0; i < TAM; i++) {
        for (int j = 0; j < TAM; j++) {
            if (abs(i - meio) + abs(j - meio) <= meio) {
                matriz[i][j] = 1;
            }
        }
    }

    printf("\nHabilidade: OCTAEDRO\n");
    exibirMatriz(matriz);
}

int main() {
    // Chamada das habilidades
    habilidadeCone();
    habilidadeCruz();
    habilidadeOctaedro();

    return 0;
}
